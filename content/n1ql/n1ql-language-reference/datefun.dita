<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_8_6" xml:lang="en-US">
	<title id="title__Toc272567324">Date Functions</title>
	<shortdesc>N1QL date functions return the system clock value or manipulate the date string. </shortdesc>
	<conbody>
		<section id="fn-date-clock-millis"><title>CLOCK_MILLIS()</title>
		<p>Returns system clock at function evaluation time, as UNIX milliseconds.
				Varies during a query.</p>
		    <codeblock outputclass="language-json">SELECT CLOCK_MILLIS();
{
    "requestID": "57bb6334-34fa-4286-beb8-c796af7e48bc",
    "clientContextID": "97d261aa-3824-4f77-bf15-ff40cff48473",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 1483543192439.568
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "561.512µs",
        "executionTime": "520.329µs",
        "resultCount": 1,
        "resultSize": 47
    }
}</codeblock>
		</section>
		<section id="fn-date-clock-str"><title>CLOCK_STR([fmt])</title>
			<p>Returns system clock at function evaluation time, as a string in a supported
				format. Varies during a query. Supported formats:</p>
				<ul>
					<li>"2006-01-02T15:04:05.999Z07:00": Default format. (ISO8601 /
						RFC3339)</li>
					<li>"2006-01-02T15:04:05Z07:00" (ISO8601 / RFC3339)</li>
					<li>"2006-01-02T15:04:05.999"</li>
					<li>"2006-01-02T15:04:05"</li>
					<li>"2006-01-02 15:04:05.999Z07:00"</li>
					<li>"2006-01-02 15:04:05Z07:00"</li>
					<li>"2006-01-02 15:04:05.999"</li>
					<li>"2006-01-02 15:04:05"</li>
					<li>"2006-01-02"</li>
					<li>"15:04:05.999Z07:00"</li>
					<li>"15:04:05Z07:00"</li>
					<li>"15:04:05.999"</li>
					<li>"15:04:05"</li>
				</ul>
		    <codeblock outputclass="language-json">SELECT CLOCK_STR("1222-11-12 11:11:11");
{
    "requestID": "26a06d24-fe1c-4e7b-91a3-9c393aa75b01",
    "clientContextID": "04e89fdd-624a-4de6-839d-982f828491b2",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-04 07:21:37.482"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "1.903321ms",
        "executionTime": "1.774177ms",
        "resultCount": 1,
        "resultSize": 55
    }
}</codeblock>	
		</section>
		<section id="fn-date-add-millis"><title>DATE_ADD_MILLIS(expression, n, part)</title>
			<p>Performs date arithmetic, and returns result of computation. <i>n</i> and <i>part</i> are used
				to define an interval or duration, which is then added (or subtracted) to the UNIX
				time stamp, returning the result. Supported values for <i>part</i> include the
				following:</p>
			<ul>
				<li>"millennium"</li>
				<li>"century"</li>
				<li>"decade"</li>
				<li>"year"</li>
				<li>"quarter"</li>
				<li>"month"</li>
				<li>"week"</li>
				<li>"day"</li>
				<li>"hour"</li>
				<li>"minute"</li>
				<li>"second"</li>
				<li>"millisecond"</li>
			</ul>
		    <codeblock outputclass="language-json">SELECT DATE_ADD_MILLIS(1463284740000, 3, 'day');
{
    "requestID": "93d3c21e-7d3f-451e-aefb-0aeb318258f3",
    "clientContextID": "dd480319-7eda-4a63-a4ff-765955f553d8",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 1463543940000
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "455.682µs",
        "executionTime": "424.356µs",
        "resultCount": 1,
        "resultSize": 43
    }
}</codeblock>
		</section>
		<section id="fn-date-add-str"><title>DATE_ADD_STR(expression, n, part)</title>
			<p>Performs date arithmetic. <i>n</i> and <i>part</i> are used to define an
				interval or duration, which is then added (or subtracted) to the date string
				in a supported format, returning the result.</p>
		    <codeblock outputclass="language-json">SELECT DATE_ADD_STR('2016-05-15 00:00:23',3, 'day');
{
    "requestID": "60623af4-620c-4ae2-b60b-fda43d918529",
    "clientContextID": "886919a6-d7a0-45c0-bb5b-1ab8acaf582b",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2016-05-18 00:00:23"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "515.859µs",
        "executionTime": "480.785µs",
        "resultCount": 1,
        "resultSize": 51
    }
}</codeblock>
		</section>
		<section id="fn-date-diff-millis"><title>DATE_DIFF_MILLIS(expression1, expression2, part)</title>
			<p>Performs date arithmetic. Returns the elapsed time between two UNIX time stamps as an integer
				whose unit is <i>part</i>. Supported values for part include the following:</p>
			<ul>
				<li>"millennium"</li>
				<li>"century"</li>
				<li>"decade"</li>
				<li>"year"</li>
				<li>"week"</li>
				<li>"day"</li>
				<li>"hour"</li>
				<li>"minute"</li>
				<li>"second"</li>
				<li>"millisecond"</li>
			</ul>
		    <codeblock outputclass="language-json">SELECT DATE_DIFF_MILLIS(1463284740000, 1463543940000, 'day');
{
    "requestID": "7b802554-df76-4c0d-aa9f-b6848f318996",
    "clientContextID": "fe8be24b-4eb1-409f-bbb5-d163883050cc",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": -3
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "2.463013ms",
        "executionTime": "2.341618ms",
        "resultCount": 1,
        "resultSize": 32
    }
}</codeblock>
		</section>
		<section id="fn-date-diff-str"><title>DATE_DIFF_STR(expression1, expression2, part)</title>
			<p>Performs date arithmetic. Returns the elapsed time between two date strings
				in a supported format, as an integer whose unit is <i>part</i>.</p>
		    <codeblock outputclass="language-json">SELECT DATE_DIFF_STR('2016-05-18 00:00:23','2016-05-15 00:00:23','day');
{
    "requestID": "db0996c2-5890-4a55-9a39-7a7adbd6ef31",
    "clientContextID": "adfc7a9c-b42e-4b5e-aa1f-fdefd7d030d1",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 3
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "2.092908ms",
        "executionTime": "2.005783ms",
        "resultCount": 1,
        "resultSize": 31
    }
}</codeblock>
		</section>
		<section id="fn-date-"><title>DATE_FORMAT_STR(expresssion, fmt)</title>
			<p>Converts dates to a different format.</p>
		    <codeblock spectitle="Example" outputclass="language-json">SELECT DATE_FORMAT_STR('2016-05-15T00:00:23+02:00','1222-11-11 11:11:11');
{
    "requestID": "c8d98cae-cf38-4588-9a82-3b54ec3b3d53",
    "clientContextID": "22b31c2d-fb15-454d-904c-43feaf491c33",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2016-05-15 00:00:23"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "523.735µs",
        "executionTime": "490.758µs",
        "resultCount": 1,
        "resultSize": 51
    }
}</codeblock>
			
		</section>
		<section id="fn-date-part-millis"><title>DATE_PART_MILLIS(expression, part [,timezone])</title>
			<p>Converts the millis date into a date string in timezone, and then returns the corresponding
				date as an integer. The date expression is a number representing
				UNIX milliseconds,  part is one of the following date part strings,
				and timezone is the timezone for the corresponding output.</p>
			<p>The date part strings can be one of the following: </p>
			<ul>
				<li>"millennium"</li>
				<li>"century"</li>
				<li>"decade": Floor(year / 10)</li>
				<li>"year"</li>
				<li>"quarter": Valid values: 1 to 4.</li>
				<li>"month": Valid values: 1 to 12.</li>
				<li>"day": Valid values: 1 to 31.</li>
				<li>"hour": Valid values: 0 to 23.</li>
				<li>"minute": Valid values: 0 to 59.</li>
				<li>"second": Valid values: 0 to 59.</li>
				<li>"millisecond": Valid values: 0 to 999.</li>
				<li>"week": Valid values: 1 to 53; ceil(day_of_year / 7.0)</li>
				<li>"day_of_year", "doy": Valid values: 1 to 366.</li>
				<li>"day_of_week", "dow": Valid values: 0 to 6.</li>
				<li>"iso_week": Valid values: 1 to 53. Use with "iso_year".</li>
				<li>"iso_year": Use with "iso_week".</li>
				<li>"iso_dow":> Valid values: 1 to 7.</li>
				<li>"timezone": Offset from UTC in seconds.</li>
				<li>"timezone_hour": Hour component of timezone offset.</li>
				<li>"timezone_minute": Minute component of timezone offset. Valid values: 0
					to 59. </li>
			</ul>
		    <codeblock spectitle="Example" outputclass="language-json">
SELECT DATE_PART_MILLIS(1463284740000,'day', 'UTC') ;
{
    "requestID": "6da88780-ea0c-453d-87a6-55dba94ffc44",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 15
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "1.547388ms",
        "executionTime": "1.526741ms",
        "resultCount": 1,
        "resultSize": 32
    }
}

SELECT DATE_PART_MILLIS(1463284740000,'day','Europe/London') ;
{
    "requestID": "91ae724e-322d-494e-906a-bdaa693aaad4",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 15
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "1.822507ms",
        "executionTime": "1.802773ms",
        "resultCount": 1,
        "resultSize": 32
    }
}							</codeblock>
		</section>
		<section id="fn-date-part-str"><title>DATE_PART_STR(expression, part)</title>
			<p>Returns date part as an integer. The date expression is a string in a
				supported format, and part is one of the supported date part strings.</p>
		    <codeblock outputclass="language-json">SELECT DATE_PART_STR('2016-05-18 00:00:23','day');
{
    "requestID": "56cdd05e-7f00-420b-8142-e5ef54f82f38",
    "clientContextID": "e2824e53-e387-4758-a015-50b6ea87ddf9",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 18
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "2.288921ms",
        "executionTime": "2.185653ms",
        "resultCount": 1,
        "resultSize": 32
    }
}</codeblock>	
		</section>
		<section id="fn-date-range-millis"><title>DATE_RANGE_MILLIS(expression1, expression2, part
			[,n])</title>
			<p>Returns an array of dates from the start date specified by <codeph>expression1</codeph>
				until the end date specified by <codeph>expression2</codeph>, in
				milliseconds, incrementing the <codeph>part</codeph> specified by
				<codeph>n</codeph>. The default value of<codeph> n</codeph> is 1.</p>
		    <codeblock spectitle="Examples" outputclass="language-json">SELECT DATE_RANGE_MILLIS(1480752000000, 1475478000000, 'month', -1);

"results": [
	{
            "$1": [
                1480752000000,
                1478156400000,
                1475478000000
            ]
        }
    ]

SELECT ARRAY_MILLIS_TO_STR(a,'2016-12-03') 
	FOR a IN DATE_RANGE_MILLIS(1480752000000, 1449129600000, 'month', -1) 
	END;							

"results": [
        {
            "$1": [
                "2016-12-03",
                "2016-11-03",
                "2016-10-03"            
		]
        }
    ]							</codeblock>
		</section>
		<section id="fn-date-range-str"><title>DATE_RANGE_STR(expression1, expression2, part
			[,n])</title>
			<p>Returns an array of dates from the start date specified by <codeph>expression1</codeph>
				until the end date specified by <codeph>expression2</codeph>,
				incrementing the <codeph>part</codeph> specified by <codeph>n</codeph>.
				The default value of <codeph>n</codeph> is 1. Note that the result does
				not contain the end
				date.</p>
		    <codeblock spectitle="Example" outputclass="language-json">SELECT DATE_RANGE_STR ("2004-01-03","2004-12-03", 'month', 4) ;
{
    "requestID": "bc5a0df2-4cd1-4b26-b67c-357291d10537",
    "signature": {
        "$1": "array"
    },
    "results": [
        {
            "$1": [
                “2004-01-03”,
                “2004-05-03”,
                “2004-09-03”
            ]
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "1.420933ms",
        "executionTime": "641.875µs",
        "resultCount": 1,
        "resultSize": 101
    }
}							</codeblock>
		</section>
		<section id="fn-date-trunc-millis"><title>DATE_TRUNC_MILLIS(expression, part)</title>
			<p>Returns UNIX time stamp that has been truncated so that the given date part
				string is the least significant.</p>
		    <codeblock outputclass="language-json">SELECT DATE_TRUNC_MILLIS(1463284740000, 'month');
{
    "requestID": "1893a1a0-6926-4c6f-a501-c5a99a7e7161",
    "clientContextID": "f84a7900-e06e-4c41-b41e-41a77ea396fe",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 1462147200000
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "5.202791ms",
        "executionTime": "5.116346ms",
        "resultCount": 1,
        "resultSize": 43
    }
}</codeblock>
		</section>
		<section id="fn-date-trunc-str"><title>DATE_TRUNC_STR(expression, part)</title>
			<p>Returns ISO 8601 time stamp that has been truncated so that the given date part string is the
				least
				significant.<codeblock outputclass="language-json">SELECT DATE_TRUNC_STR('2016-05-18 00:00:23', 'year');
{
    "requestID": "5c3d82d7-96c6-4a0e-99ab-4027e30f0ec0",
    "clientContextID": "e4e92896-04db-47ce-98ee-8f8e099db330",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2016-01-01 17:00:00"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "6.277112ms",
        "executionTime": "6.175783ms",
        "resultCount": 1,
        "resultSize": 51
    }
}</codeblock></p>
		</section>
		<section id="fn-date-duration-to-str"><title>DURATION_TO_STR(expression)</title>
			<p>Converts duration, specified as a floating point number followed by a time unit such as
				1.3ms, 3.25ns, or 7.6666s, to a query timing string. The conversion
				function supports nano- (ns) , micro- ( μs), milli- (ms), and second
				(s) time units.</p>
		</section>
		<section id="fn-date-millis"><title>MILLIS(expression)</title>
			<p>Returns date that has been converted in a supported format to UNIX
				milliseconds.</p>
		    <codeblock outputclass="language-json">SELECT MILLIS('2016-05-18 00:00:23');
{
    "requestID": "5eb30436-1b6f-48fd-94ac-41cab715980f",
    "clientContextID": "eb5235cf-7871-4579-818d-171255b33740",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 1463554823000
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "552.639µs",
        "executionTime": "514.713µs",
        "resultCount": 1,
        "resultSize": 43
    }
}</codeblock>
		</section>
		<section id="fn-date-millis-to-str"><title>MILLIS_TO_STR(expression [, fmt ])</title>
			<p>Returns the string in the supported format to which the UNIX milliseconds
				has been converted.</p>
		    <codeblock outputclass="language-json">SELECT MILLIS_TO_STR(1463554823000);
{
    "requestID": "df68746f-692c-4049-a560-f4ebd7b6bbda",
    "clientContextID": "e25bde59-a04c-4698-a9d8-4a22d7391ed0",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2016-05-18T00:00:23-07:00"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "430.807µs",
        "executionTime": "402.176µs",
        "resultCount": 1,
        "resultSize": 57
    }
}</codeblock>
		</section>
		<section id="fn-date-millis-to-utc"><title>MILLIS_TO_UTC(expression [, fmt ])</title>
			<p>Returns the UTC string to which the UNIX time stamp has been converted in
				the supported format.</p>
		    <codeblock outputclass="language-json">SELECT MILLIS_TO_UTC(1463554823000);
{
    "requestID": "f020e9bf-cfca-4af1-b2da-f589ce7a649c",
    "clientContextID": "8321eb01-d474-41eb-bfd3-542a52e513b3",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2016-05-18T07:00:23Z"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "473µs",
        "executionTime": "438µs",
        "resultCount": 1,
        "resultSize": 52
    }
}</codeblock>
		</section>
		<section id="fn-date-millis-to-tz"><title>MILLIS_TO_ZONE_NAME(expression, tz_name [, fmt ])</title>
            <p>Also: <i>MILLIS_TO_TZ(expression, tz_name [, fmt ])</i></p>
			<p>Converts the UNIX time stamp to a string in the named time zone, and returns
				the string.</p>
		    <codeblock outputclass="language-json">SELECT MILLIS_TO_ZONE_NAME(1483575060859.4465, "EST");
{
    "requestID": "7a17284b-93b1-4c89-8c70-83b202c96012",
    "clientContextID": "9aebf531-7fad-4953-937c-7869560f45a2",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-04T19:11:00.859-05:00"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "505.275µs",
        "executionTime": "482.449µs",
        "resultCount": 1,
        "resultSize": 61
    }
}

SELECT MILLIS_TO_TZ(1483575060859.4465, "US/Eastern");
{
    "requestID": "08da9893-8b87-4e74-81dd-5252c5b7c15c",
    "clientContextID": "079c52ba-f04c-4722-8602-57f62dd804a2",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-04T19:11:00.859-05:00"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "518.086µs",
        "executionTime": "494.935µs",
        "resultCount": 1,
        "resultSize": 61
    }
}</codeblock>
		</section>
		<section id="fn-date-now-millis"><title>NOW_MILLIS()</title>
			<p>Returns statement time stamp as UNIX milliseconds; does not vary during a
				query.</p>
		    <codeblock outputclass="language-json">SELECT NOW_MILLIS();
{
    "requestID": "f8cd6518-96e3-470e-8275-201cdf333f9a",
    "clientContextID": "8636256d-cd9f-439f-a972-aea84eedb823",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 1483575060859.4465
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "428.33µs",
        "executionTime": "398.53µs",
        "resultCount": 1,
        "resultSize": 48
    }
}</codeblock>
		</section>
		<section id="fn-date-now-str"><title>NOW_STR([ fmt ])</title>
			<p>Returns statement time stamp as a string in a supported format; does not vary during a
				query.</p>
		    <codeblock outputclass="language-json">SELECT NOW_STR();
{
    "requestID": "05dbc109-5d2e-4609-96c7-ecb5e6639394",
    "clientContextID": "a75596c2-2d4a-46ed-8bbf-92cfa3604314",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-04T16:15:15.704-08:00"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "1.265853ms",
        "executionTime": "1.236293ms",
        "resultCount": 1,
        "resultSize": 61
    }
}

SELECT NOW_STR('1222-11-11');
{
    "requestID": "ffe42544-2135-446c-902d-de6c35671552",
    "clientContextID": "f805dec9-8cc1-4139-8cf2-b62d3ed92d8c",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-04"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "411.815µs",
        "executionTime": "381.565µs",
        "resultCount": 1,
        "resultSize": 42
    }
}</codeblock>
		</section>
		<section id="fn-date-str-to-duration"><title>STR_TO_DURATION(expression)</title>
			<p>Converts a string to duration, which is a floating point number followed by a time unit
				such as s, μs, ms, or ns. The conversion function supports nano-
				(ns) , micro- ( μs), milli- (ms), and second (s) time units.</p>
		    <codeblock outputclass="language-json">SELECT STR_TO_DURATION('3ms');
{
    "requestID": "733df9f5-3b88-409e-9ebd-9cecdc4bcef6",
    "clientContextID": "70ef82ae-7b28-4435-a9d7-72a3911d14f6",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 3000000
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "357.033µs",
        "executionTime": "333.136µs",
        "resultCount": 1,
        "resultSize": 37
    }
}</codeblock>
		</section>
		<section id="fn-date-str-to-millis"><title>STR_TO_MILLIS(expression)</title>
			<p>Returns date that has been converted in a supported format to UNIX
				milliseconds.</p>
		    <codeblock outputclass="language-json">SELECT STR_TO_MILLIS('2017-01-04T16:15:15.704-08:00');
{
    "requestID": "384d8902-9ba4-45e1-a5b5-fd576f4b8fb5",
    "clientContextID": "c58d1032-8757-44d4-9351-6b72be40a2de",
    "signature": {
        "$1": "number"
    },
    "results": [
        {
            "$1": 1483575315704
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "475.904µs",
        "executionTime": "447.544µs",
        "resultCount": 1,
        "resultSize": 43
    }
}</codeblock>
		</section>
		<section id="fn-date-str-to-utc"><title>STR_TO_UTC(expression)</title>
			<p>Converts the ISO 8601 time stamp to UTC.</p>
		    <codeblock outputclass="language-json">SELECT STR_TO_UTC('2017-01-04T16:15:15.704-08:00');
{
    "requestID": "03b38851-674f-49cd-843c-fb6f4e2aebd9",
    "clientContextID": "b4edafac-76a9-4506-93ac-6cc83e1bf793",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-05T00:15:15.704Z"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "469.788µs",
        "executionTime": "439.53µs",
        "resultCount": 1,
        "resultSize": 56
    }
}</codeblock>
		</section>
		<section id="fn-date-str-to-tz"><title>STR_TO_ZONE_NAME(expression, tz_name)</title>
			<p>Converts the supported time stamp string to the named time zone.</p>
		    <codeblock outputclass="language-json">SELECT STR_TO_ZONE_NAME('2017-01-04T16:15:15.704-08:00', "EST");
{
    "requestID": "d551be57-39d3-4fb3-9308-397e663ce652",
    "clientContextID": "e304c183-00e0-4f1c-bf58-9c14dca937a2",
    "signature": {
        "$1": "string"
    },
    "results": [
        {
            "$1": "2017-01-04T19:15:15.704-05:00"
        }
    ],
    "status": "success",
    "metrics": {
        "elapsedTime": "434.274µs",
        "executionTime": "409.026µs",
        "resultCount": 1,
        "resultSize": 61
    }
}</codeblock>
		</section>
		<section>
			<title>Example Query Using Date Functions</title>
			<p>The following query retrieves purchase information for an e-commerce report. The report
				lists unique customers that purchased something from the company website in the last
				month. This information is used to identify user activity and growth.</p>
		    <codeblock outputclass="language-json">SELECT DISTINCT COUNT(purchases.customerId)
  FROM purchases
  WHERE STR_TO_MILLIS(purchases.purchasedAt)
    BETWEEN STR_TO_MILLIS("2014-02-01") AND STR_TO_MILLIS("2014-03-01")         </codeblock>
			<p>Returns:</p>
			<codeblock>{
   "results": [
     {
       "$1": 3831
     }
   ]
 }                   </codeblock>
		</section>

	</conbody>
</concept>
